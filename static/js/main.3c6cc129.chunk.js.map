{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_NAME","SORT_BY_LENGTH","Good","good","App","useState","sortBy","setSortBy","isReversed","setIsReversed","goods","sortedBy","preparedGoods","sort","goodA","goodB","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","prevState","map","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,OACfC,EAAiB,SAEjBC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,oBAAI,UAAQ,OAAZ,SACGA,KA6BQC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA7BiB,SAACA,EAAOC,EAAUH,GACzC,IAAII,EAAa,YAAOF,GAqBxB,OAnBIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKX,EACH,OAAOc,EAAME,cAAcD,GAE7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,IACFI,EAAgBA,EAAcM,WAGzBN,EAOOO,CAAiBpB,EAAiBO,EAAQE,GAExD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYhB,IAAWN,IAGzBuB,QAAS,kBAAMhB,EAAUP,IAN3B,iCAUA,wBACEqB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYhB,IAAWL,IAGzBsB,QAAS,kBAAMhB,EAAUN,IAN3B,4BAWA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAad,IAGfe,QAAS,kBAAMd,GAAc,SAAAe,GAAS,OAAKA,MAN7C,sBAWElB,GAAUE,IACV,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAU,IACVE,GAAc,IALlB,sBAaJ,6BACGC,EAAMe,KAAI,SAAAtB,GAAI,OAAI,cAAC,EAAD,CAAMA,KAAMA,GAAWA,YCzGlDuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3c6cc129.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_NAME = 'name';\nconst SORT_BY_LENGTH = 'length';\n\nconst Good = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n\nconst getPreparedGoods = (goods, sortedBy, isReversed) => {\n  let preparedGoods = [...goods];\n\n  if (sortedBy) {\n    preparedGoods.sort((goodA, goodB) => {\n      switch (sortedBy) {\n        case SORT_BY_NAME:\n          return goodA.localeCompare(goodB);\n\n        case SORT_BY_LENGTH:\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = getPreparedGoods(goodsFromServer, sortBy, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortBy !== SORT_BY_NAME,\n          })\n          }\n          onClick={() => setSortBy(SORT_BY_NAME)}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortBy !== SORT_BY_LENGTH,\n          })\n          }\n          onClick={() => setSortBy(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })\n          }\n          onClick={() => setIsReversed(prevState => !prevState)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortBy('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => <Good good={good} key={good} />)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}